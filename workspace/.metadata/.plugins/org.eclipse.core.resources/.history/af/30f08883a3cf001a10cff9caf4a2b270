package programs;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;
import java.util.Random;
import java.util.Scanner;

public class Time2 {
	static ArrayList<String> list2 = new ArrayList<String>();
	static ArrayList<String> list3 = new ArrayList<String>();
	int hh = 0;
	int mm = 0;
	static boolean isResultFound = false;

	static void permute(String[] a, int k) {
		String temp2 = "";
		if (k == a.length) {
			for (int i = 0; i < a.length; i++) {
				System.out.print(a[i]);
				temp2 = temp2 + a[i];

			}
			System.out.println();
			list2.add(temp2);
			// System.out.println(temp2);

		} else {
			for (int i = k; i < a.length; i++) {
				String temp = a[k];
				a[k] = a[i];
				a[i] = temp;

				permute(a, k + 1);

				temp = a[k];
				a[k] = a[i];
				a[i] = temp;
			}
		}
	}

	public static void main(String args[]) {

		Scanner sc = new Scanner(System.in);
		System.out.println("Enter the 4 digit number: ");
		int Num = sc.nextInt();
		sc.close();
		String[] sequence = new String[4];

		for (int i = 0; i < 4; i++) {
			sequence[i] = String.valueOf(Num % 10);
			Num = Num / 10;
		}
		System.out.println("The original sequence is: ");
		for (int i = 0; i < 4; i++)
			System.out.print(sequence[i] + " ");

		System.out.println("\nThe permuted sequences are: ");
		permute(sequence, 0);
		System.out.println(list2);
		for (int i = 0; i < list2.size(); i++) {
			if (Integer.parseInt(list2.get(i)) < 2400) {
				list3.add(list2.get(i));
			}
		}

		Collections.sort(list3);
		Collections.reverse(list3);
		System.out.println(list3);
		for (int i = 0; i < list3.size(); i++) {
			int time = Integer.parseInt(list3.get(i));
			int hh = time / 100;
			int mm = time % 100;
			if(hh>23)
			{
				hh=0;
			}
			if (mm < 60) {
				System.out.println("The highest time is " + hh + ":" + mm);
				isResultFound = true;
				break;
			}

		}
		
		
		if(!isResultFound){
			System.out.println("No time can be derived from this 4 digit number");
		}
		

		

	}
}
